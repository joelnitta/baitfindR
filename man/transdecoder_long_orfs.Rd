% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transdecoder.R
\name{transdecoder_long_orfs}
\alias{transdecoder_long_orfs}
\title{Find long open reading frames.}
\usage{
transdecoder_long_orfs(transcriptome_file, wd = here::here(),
  other_args = NULL, echo = pkgconfig::get_config("baitfindR::echo",
  fallback = FALSE), ...)
}
\arguments{
\item{transcriptome_file}{Character vector of length one; the path to the
fasta file containing transcript sequences (i.e., the transcriptome).}

\item{wd}{Character vector of length one; the directory where the command
will be run, and the output folder created.}

\item{other_args}{Character vector; other arguments to pass to TransDecoder.
Each should be an element of the vector.}

\item{echo}{Logical; should the standard output and error be printed to the screen?}

\item{...}{Additional other arguments. Not used by this function, but meant to
be used by \code{\link[drake]{drake_plan}} for tracking during workflows.}
}
\value{
Within the R environment, a list with components specified in
\code{\link[processx]{run}}.

Externally, an output folder in the working directory containing base frequencies
and .cds, .gff3, and .pep files for the recovered ORFs. The folder will be named
\code{<transcriptome>.transdecoder_dir}, where \code{<transcriptome>} is the value
of that argument.
}
\description{
Extracts long open reading frames (ORFs) from a fasta file containing transcript
sequences (i.e., the transcriptome). This is a wrapper that calls
\code{TransDecoder.LongOrfs}.
}
\examples{
\dontrun{
library(ape)
temp_dir <- tempdir()
data("PSKY")
write.FASTA(PSKY, fs::path(temp_dir, "PSKY.fasta"))
transdecoder_long_orfs(
  transcriptome_file = fs::path(temp_dir, "PSKY.fasta"),
  wd = temp_dir
  )
list.files(temp_dir)
}
}
\references{
\url{http://transdecoder.github.io}
}
\author{
Joel H Nitta, \email{joelnitta@gmail.com}
}
