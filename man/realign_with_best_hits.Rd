% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blast.R
\name{realign_with_best_hits}
\alias{realign_with_best_hits}
\title{Realign top blast hit of multi-fasta file with that fasta file.}
\usage{
realign_with_best_hits(
  best_hits_dir,
  best_hits_pattern = "bestmatch",
  fasta_dir,
  fasta_pattern = "\\\\.fa$",
  ...
)
}
\arguments{
\item{best_hits_dir}{Path to directory containing top blast hits.}

\item{best_hits_pattern}{Pattern used for matching with grep. Only
files with names matching the pattern will be included as the top
blast hit.}

\item{fasta_dir}{Path to directory containing fasta files for realignment.}

\item{fasta_pattern}{Pattern used for matching with grep. Only
files with names matching the pattern will be included for realignment.}

\item{...}{Additional other arguments. Not used by this function,
but meant to be used by \code{\link[drake]{drake_plan}} for tracking
during workflows.}
}
\value{
List of lists, each of which is of class `DNAbin`.
}
\description{
Top hits and original fasta files are matched based on the first part
of the filename separated by periods (i.e., the filename without any
extension).
}
\examples{

library(ape)

# Make temp dir for storing files
temp_dir <- fs::dir_create(fs::path(tempdir(), "baitfindR_example"))

# Write out ape::woodmouse dataset as DNA
data(woodmouse)
ape::write.FASTA(woodmouse, fs::path(temp_dir, "woodmouse.fasta"))
ape::write.FASTA(woodmouse, fs::path(temp_dir, "woodmouse2.fasta"))

# Make blast database
build_blast_db(
  fs::path(temp_dir, "woodmouse.fasta"),
  db_type = "nucl",
  out_name = "wood",
  parse_seqids = TRUE,
  wd = temp_dir)

# Blast the original sequences against the database
blast_n_list(
  fasta_folder = temp_dir,
  fasta_pattern = "fasta",
  database_path = fs::path(temp_dir, "wood")
)

# Extract the top BLAST hit for each fasta file.
extract_blast_hits(
  blast_results_dir = temp_dir,
  blast_results_pattern = "\\\\.tsv$",
  database_path = fs::path(temp_dir, "wood"),
  out_dir = temp_dir,
  out_ext = "bestmatch"
)

realign_with_best_hits(
  best_hits_dir = temp_dir,
  best_hits_pattern = "bestmatch",
  fasta_dir = temp_dir,
  fasta_pattern = "fasta"
)

# Cleanup.
fs::file_delete(temp_dir)
}
